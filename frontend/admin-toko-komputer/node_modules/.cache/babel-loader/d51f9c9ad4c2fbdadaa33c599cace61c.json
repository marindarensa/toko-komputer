{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactJS\\\\toko-komputer\\\\frontend\\\\admin-toko-komputer\\\\src\\\\pages\\\\Customer.js\";\nimport React from \"react\";\nimport Navbar from \"../components/Navbar\";\nimport ProductList from \"../components/ProductList\";\nimport { base_url, product_image_url } from \"../config.js\";\nimport $ from \"jquery\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Home extends React.Component {\n  constructor() {\n    super();\n\n    this.headerConfig = () => {\n      let header = {\n        headers: {\n          Authorization: `Bearer ${this.state.token}`\n        }\n      };\n      return header;\n    };\n\n    this.getCustomers = () => {\n      let url = base_url + \"/customer\";\n      axios.get(url, this.headerConfig()).then(response => {\n        this.setState({\n          customers: response.data\n        });\n      }).catch(error => {\n        if (error.response) {\n          if (error.response.status) {\n            window.alert(error.response.data.message);\n            this.props.history.push(\"/login\");\n          }\n        } else {\n          console.log(error);\n        }\n      });\n    };\n\n    this.Add = () => {\n      $(\"#modal_customer\").modal(\"show\");\n      this.setState({\n        action: \"insert\",\n        customer_id: 0,\n        name: \"\",\n        address: \"\",\n        phone: \"\",\n        image: null,\n        username: \"\",\n        password: \"\",\n        fillPassword: true,\n        uploadFile: true\n      });\n    };\n\n    this.Edit = selectedItem => {\n      $(\"#modal_customer\").modal(\"show\");\n      this.setState({\n        action: \"update\",\n        customer_id: selectedItem.customer_id,\n        name: selectedItem.name,\n        phone: selectedItem.phone,\n        address: selectedItem.address,\n        image: null,\n        username: selectedItem.username,\n        password: \"\",\n        uploadFile: false,\n        fillPassword: false\n      });\n    };\n\n    this.saveCustomer = event => {\n      event.preventDefault();\n      $(\"#modal_customer\").modal(\"hide\");\n      let form = new FormData();\n      form.append(\"customer_id\", this.state.customer_id);\n      form.append(\"name\", this.state.name);\n      form.append(\"phone\", this.state.phone);\n      form.append(\"address\", this.state.address);\n      form.append(\"username\", this.state.username);\n\n      if (this.state.uploadFile) {\n        form.append(\"image\", this.state.image);\n      }\n\n      if (this.state.fillPassword) {\n        form.append(\"password\", this.state.password);\n      }\n\n      let url = base_url + \"/customer\";\n\n      if (this.state.action === \"insert\") {\n        axios.post(url, form, this.headerConfig()).then(response => {\n          window.alert(response.data.message);\n          this.getCustomers();\n        }).catch(error => console.log(error));\n      } else if (this.state.action === \"update\") {\n        axios.put(url, form, this.headerConfig()).then(response => {\n          window.alert(response.data.message);\n          this.getCustomers();\n        }).catch(error => console.log(error));\n      }\n    };\n\n    this.dropCustomer = selectedItem => {\n      if (window.confirm(\"are you sure will delete this item?\")) {\n        let url = base_url + \"/customer/\" + selectedItem.customer_id;\n        axios.delete(url, this.headerConfig()).then(response => {\n          window.alert(response.data.message);\n          this.getCustomers();\n        }).catch(error => console.log(error));\n      }\n    };\n\n    this.state = {\n      customers: [],\n      token: \"\",\n      action: \"\",\n      name: \"\",\n      phone: \"\",\n      address: \"\",\n      image: \"\",\n      username: \"\",\n      password: \"\",\n      uploadFile: true,\n      fillPassword: true,\n      customer_id: \"\"\n    };\n\n    if (localStorage.getItem(\"token\")) {\n      this.state.token = localStorage.getItem(\"token\");\n    } else {\n      window.location = \"/login\";\n    }\n\n    this.headerConfig.bind(this);\n  }\n\n  componentDidMount() {\n    this.getCustomers();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-bold text-info mt-2\",\n          children: \"Customer List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: this.state.customers.map(item => /*#__PURE__*/_jsxDEV(CustomerList, {\n            name: item.name,\n            phone: item.phone,\n            address: item.address,\n            image: customer_image_url + \"/\" + item.image,\n            onEdit: () => this.Edit(item),\n            onDrop: () => this.dropCustomer(item)\n          }, item.customer_id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-success\",\n          onClick: () => this.Add(),\n          children: \"Add Customer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal fade\",\n        id: \"modal_customer\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-dialog\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"modal-header bg-info text-white\",\n              children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Form Customer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"modal-body\",\n              children: /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: ev => this.saveCustomer(ev),\n                children: [\"Customer Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: \"form-control mb-1\",\n                  value: this.state.name,\n                  onChange: ev => this.setState({\n                    name: ev.target.value\n                  }),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 38\n                }, this), \"Customer Phone\", /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: \"form-control mb-1\",\n                  value: this.state.phone,\n                  onChange: ev => this.setState({\n                    phone: ev.target.value\n                  }),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 38\n                }, this), \"Customer Address\", /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: \"form-control mb-1\",\n                  value: this.state.address,\n                  onChange: ev => this.setState({\n                    address: ev.target.value\n                  }),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 38\n                }, this), \"Username\", /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: \"form-control mb-1\",\n                  value: this.state.username,\n                  onChange: ev => this.setState({\n                    username: ev.target.value\n                  }),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 38\n                }, this), this.state.action === \"update\" && this.state.uploadFile === false ? /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-sm btn-dark mb-1 btn-block\",\n                  onClick: () => this.setState({\n                    uploadFile: true\n                  }),\n                  children: \"Change Customer Image\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 41\n                }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [\"Customer Image\", /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"file\",\n                    className: \"form-control mb-1\",\n                    onChange: ev => this.setState({\n                      image: ev.target.files[0]\n                    }),\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 127,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 45\n                }, this), this.state.action === \"update\" && this.state.fillPassword === false ? /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-sm btn-secondary mb-1 btn-block\",\n                  onClick: () => this.setState({\n                    fillPassword: true\n                  }),\n                  children: \"Change Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 41\n                }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [\"Password\", /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"password\",\n                    className: \"form-control mb-1\",\n                    value: this.state.password,\n                    onChange: ev => this.setState({\n                      password: ev.target.value\n                    }),\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 142,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  className: \"btn btn-block btn-success\",\n                  children: \"Simpan\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["D:/ReactJS/toko-komputer/frontend/admin-toko-komputer/src/pages/Customer.js"],"names":["React","Navbar","ProductList","base_url","product_image_url","$","axios","Home","Component","constructor","headerConfig","header","headers","Authorization","state","token","getCustomers","url","get","then","response","setState","customers","data","catch","error","status","window","alert","message","props","history","push","console","log","Add","modal","action","customer_id","name","address","phone","image","username","password","fillPassword","uploadFile","Edit","selectedItem","saveCustomer","event","preventDefault","form","FormData","append","post","put","dropCustomer","confirm","delete","localStorage","getItem","location","bind","componentDidMount","render","map","item","customer_image_url","ev","target","value","files"],"mappings":"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","sourcesContent":["import React from \"react\"\r\nimport Navbar from \"../components/Navbar\"\r\nimport ProductList from \"../components/ProductList\"\r\nimport { base_url, product_image_url } from \"../config.js\";\r\nimport $ from \"jquery\"\r\nimport axios from \"axios\"\r\n\r\n\r\n\r\nexport default class Home extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            customers: [],\r\n            token: \"\",\r\n            action: \"\",\r\n            name: \"\",\r\n            phone: \"\",\r\n            address: \"\",\r\n            image: \"\",\r\n            username: \"\",\r\n            password: \"\",\r\n            uploadFile: true,\r\n            fillPassword: true,\r\n            customer_id: \"\",\r\n        }\r\n\r\n        if (localStorage.getItem(\"token\")) {\r\n            this.state.token = localStorage.getItem(\"token\")\r\n        } else {\r\n            window.location = \"/login\"\r\n        }\r\n        this.headerConfig.bind(this)\r\n    }\r\n    headerConfig = () => {\r\n        let header = {\r\n            headers: { Authorization: `Bearer ${this.state.token}` }\r\n        }\r\n        return header\r\n    }\r\n    getCustomers = () => {\r\n        let url = base_url + \"/customer\"\r\n        axios.get(url, this.headerConfig())\r\n            .then(response => {\r\n                this.setState({ customers: response.data })\r\n            })\r\n            .catch(error => {\r\n                if (error.response) {\r\n                    if (error.response.status) {\r\n                        window.alert(error.response.data.message)\r\n                        this.props.history.push(\"/login\")\r\n                    }\r\n                } else {\r\n                    console.log(error);\r\n                }\r\n            })\r\n    }\r\n    componentDidMount() {\r\n        this.getCustomers()\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar />\r\n                <div className=\"container\">\r\n                    <h3 className=\"text-bold text-info mt-2\">Customer List</h3>\r\n                    <div className=\"row\">\r\n                        {this.state.customers.map(item => (\r\n                            <CustomerList\r\n                                key={item.customer_id}\r\n                                name={item.name}\r\n                                phone={item.phone}\r\n                                address={item.address}\r\n                                image={customer_image_url + \"/\" + item.image}\r\n                                onEdit={() => this.Edit(item)}\r\n                                onDrop={() => this.dropCustomer(item)}\r\n                            />\r\n                        ))}\r\n                    </div>\r\n                    <button className=\"btn btn-success\" onClick={() => this.Add()}>\r\n                        Add Customer\r\n                   </button>\r\n                </div>\r\n\r\n                {/* modal customer  */}\r\n                <div className=\"modal fade\" id=\"modal_customer\">\r\n                    <div className=\"modal-dialog\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header bg-info text-white\">\r\n                                <h4>Form Customer</h4>\r\n                            </div>\r\n                            <div className=\"modal-body\">\r\n                                <form onSubmit={ev => this.saveCustomer(ev)}>\r\n                                    Customer Name\r\n                                     <input type=\"text\" className=\"form-control mb-1\"\r\n                                        value={this.state.name}\r\n                                        onChange={ev => this.setState({ name: ev.target.value })}\r\n                                        required\r\n                                    />\r\n                                    Customer Phone\r\n                                     <input type=\"text\" className=\"form-control mb-1\"\r\n                                        value={this.state.phone}\r\n                                        onChange={ev => this.setState({ phone: ev.target.value })}\r\n                                        required\r\n                                    />\r\n                                    Customer Address\r\n                                     <input type=\"text\" className=\"form-control mb-1\"\r\n                                        value={this.state.address}\r\n                                        onChange={ev => this.setState({ address: ev.target.value })}\r\n                                        required\r\n                                    />\r\n                                    Username\r\n                                     <input type=\"text\" className=\"form-control mb-1\"\r\n                                        value={this.state.username}\r\n                                        onChange={ev => this.setState({ username: ev.target.value })}\r\n                                        required\r\n                                    />\r\n\r\n                                    {this.state.action === \"update\" && this.state.uploadFile === false ? (\r\n                                        <button className=\"btn btn-sm btn-dark mb-1 btn-block\"\r\n                                            onClick={() => this.setState({ uploadFile: true })}>\r\n                                            Change Customer Image\r\n                                        </button>\r\n                                    ) : (\r\n                                            <div>\r\n                                                Customer Image\r\n                                                <input type=\"file\" className=\"form-control mb-1\"\r\n                                                    onChange={ev => this.setState({ image: ev.target.files[0] })}\r\n                                                    required\r\n                                                />\r\n                                            </div>\r\n                                        )}\r\n\r\n                                    {this.state.action === \"update\" && this.state.fillPassword === false ? (\r\n                                        <button className=\"btn btn-sm btn-secondary mb-1 btn-block\"\r\n                                            onClick={() => this.setState({ fillPassword: true })}>\r\n                                            Change Password\r\n                                        </button>\r\n                                    ) : (\r\n                                            <div>\r\n                                                Password\r\n                                                <input type=\"password\" className=\"form-control mb-1\"\r\n                                                    value={this.state.password}\r\n                                                    onChange={ev => this.setState({ password: ev.target.value })}\r\n                                                    required\r\n                                                />\r\n                                            </div>\r\n                                        )}\r\n                                    <button type=\"submit\" className=\"btn btn-block btn-success\">\r\n                                        Simpan\r\n                                    </button>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    Add = () => {\r\n        $(\"#modal_customer\").modal(\"show\")\r\n        this.setState({\r\n            action: \"insert\",\r\n            customer_id: 0,\r\n            name: \"\",\r\n            address: \"\",\r\n            phone: \"\",\r\n            image: null,\r\n            username: \"\",\r\n            password: \"\",\r\n            fillPassword: true,\r\n            uploadFile: true\r\n        })\r\n    }\r\n\r\n    Edit = selectedItem => {\r\n        $(\"#modal_customer\").modal(\"show\")\r\n        this.setState({\r\n            action: \"update\",\r\n            customer_id: selectedItem.customer_id,\r\n            name: selectedItem.name,\r\n            phone: selectedItem.phone,\r\n            address: selectedItem.address,\r\n            image: null,\r\n            username: selectedItem.username,\r\n            password: \"\",\r\n            uploadFile: false,\r\n            fillPassword: false,\r\n        })\r\n    }\r\n    saveCustomer = event => {\r\n        event.preventDefault()\r\n        $(\"#modal_customer\").modal(\"hide\")\r\n        let form = new FormData()\r\n        form.append(\"customer_id\", this.state.customer_id)\r\n        form.append(\"name\", this.state.name)\r\n        form.append(\"phone\", this.state.phone)\r\n        form.append(\"address\", this.state.address)\r\n        form.append(\"username\", this.state.username)\r\n        if (this.state.uploadFile) {\r\n            form.append(\"image\", this.state.image)\r\n        }\r\n\r\n        if (this.state.fillPassword) {\r\n            form.append(\"password\", this.state.password)\r\n        }\r\n\r\n        let url = base_url + \"/customer\"\r\n        if (this.state.action === \"insert\") {\r\n            axios.post(url, form, this.headerConfig())\r\n                .then(response => {\r\n                    window.alert(response.data.message)\r\n                    this.getCustomers()\r\n                })\r\n                .catch(error => console.log(error))\r\n        } else if (this.state.action === \"update\") {\r\n            axios.put(url, form, this.headerConfig())\r\n                .then(response => {\r\n                    window.alert(response.data.message)\r\n                    this.getCustomers()\r\n                })\r\n                .catch(error => console.log(error))\r\n        }\r\n    }\r\n    dropCustomer = selectedItem => {\r\n        if (window.confirm(\"are you sure will delete this item?\")) {\r\n            let url = base_url + \"/customer/\" + selectedItem.customer_id\r\n            axios.delete(url, this.headerConfig())\r\n                .then(response => {\r\n                    window.alert(response.data.message)\r\n                    this.getCustomers()\r\n                })\r\n                .catch(error => console.log(error))\r\n        }\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}